<project name="cr" default="build">
  <!-- example: https://github.com/previousnext/agov/blob/8.x-1.x/build.xml -->
  <!-- Properties -->
  <property name="app.dir"            value="${project.basedir}/" />
  <property name="app.name"           value="CR Campaign" />
  <property name="app.profile.name"   value="cr" />
  <property name="app.profile.dir"    value="${app.dir}profiles/${app.profile.name}/" />
  <property name="app.profile.theme"  value="${app.profile.dir}themes/custom/campaign_base" />
  <property name="app.content.dir"    value="${app.profile.dir}modules/custom/cr_default_content/content/" />
  <!-- Development modules. -->
  <property name="app.config_modules" value="cr cr_article cr_content_wall cr_teaser cr_landing_page cr_default_content cr_search" />
  <!-- This should get overidden for secure builds. -->
  <property name="app.password"       override="true" value="admin" />
  <property name="app.uri"            override="true" value="http://campaign.dev" />
  <property name="drush.bin"          override="true" value="${app.dir}bin/drush" />
  <property name="c.home"             override="true" value="${app.profile.dir}tests/behat/vendor/" />
  <property name="cs.bin"             override="true" value="${c.home}bin/phpcs" />
  <property name="md.bin"             override="true" value="${c.home}bin/phpmd" />
  <property name="loc.bin"            override="true" value="${c.home}bin/phploc" />
  <property name="cpd.bin"            override="true" value="${c.home}bin/phpcpd" />
  <property name="cs.dir"             override="true" value="drupal/coder/coder_sniffer" />
  <property name="cs.standard"        override="true" value="--standard=DrupalPractice" />
  <property name="cs.ext"             override="true" value="--extensions=php,module,inc,install,test,profile,theme" />
  <property name="db.querystring"     override="true" value="mysql://root:@localhost/campaign" />
  <!-- These allow developers to override config. on a per environment basis -->
  <property file="build.properties"   override="true"/>
  <!-- Default & meta -->
  <target name="build" depends="cleanfiles, install, grunt:build"
    description="Build (or rebuild) the project.">
  </target>

  <!-- Tests -->
  <target name="test" depends="prepare-test" description="Run behat tests">
    <exec dir="${app.profile.dir}tests/behat"
      passthru="true" checkreturn="true"
      command="vendor/bin/behat" />
  </target>
  <target name="prepare-test"
    description="Prepare to tun behat tests">
    <copy file="${app.profile.dir}tests/behat/behat.yml.phing" tofile="${app.profile.dir}tests/behat/behat.yml" overwrite="true">
      <filterchain>
        <replacetokens begintoken="%%" endtoken="%%">
          <token key="DRUPAL_TI_DRUPAL_DIR" value="${app.dir}" />
          <token key="BASE_URL" value="${app.uri}" />
        </replacetokens>
      </filterchain>
    </copy>
  </target>

  <!-- Front-end -->
  <target name="grunt:build" description="Generate all compiled Sass and JS files.">
    <exec dir="${app.profile.theme}" logoutput="true" passthru="true" checkreturn="true"
      command="grunt build" />
  </target>

  <!-- File system -->
  <target name="cleanfiles">
    <exec dir="${app.dir}sites/default/files" command="rm -rf *" passthru="true"/>
  </target>
  <target name="permissions">
    <exec command="chmod 755 ${app.dir}sites/default" />
    <exec command="chmod 755 ${app.dir}sites/default/settings.php" />
    <exec command="chmod 777 -R ${app.dir}sites/default/files/" />
  </target>

  <!-- Drush core -->
  <target name="make-core"
    depends="make"
    description="Compile CR from a make file">
    <exec dir="${app.dir}" checkreturn="true" logoutput="true" passthru="true"
      command="${drush.bin} make -y ${app.profile.dir}drupal-org-core.make.yml --no-cache --prepare-install" />
  </target>
  <target name="make"
    description="Compile CR contrib from a make file">
    <exec dir="${app.dir}" checkreturn="true" logoutput="true" passthru="true"
      command="${drush.bin} make -y ${app.profile.dir}drupal-org.make.yml --no-core --contrib-destination=${app.profile.dir}" />
  </target>
  <target name="install"
    description="Install CR with standard configuration.">
    <exec dir="${app.dir}" logoutput="true" passthru="true"
      command="${drush.bin} si ${app.profile.name} -y --site-name=${app.name} --account-pass='${app.password}' --db-url=${db.querystring}" />
    <phingcall target="permissions" />
  </target>
  <target name="cache:clear">
    <exec command="${drush.bin} cr" passthru="true"/>
    <phingcall target="permissions" />
  </target>
  <target name="login" description="Generate a one-time login link">
    <exec dir="${app.dir}" passthru="true" logoutput="true"
      command="${drush.bin} uli -l ${app.uri}" />
  </target>

  <!-- Drush contrib -->
  <target name="config:export" description="Export all of the configuration for the defined modules.">
    <foreach list="${app.config_modules}" param="config_devel_module" target="config:export:single" delimiter=" " />
  </target>
  <target name="config:export:single">
    <exec dir="${app.dir}" passthru="true" logoutput="true"
      command="${drush.bin} config-devel-export ${config_devel_module}" />
  </target>
  <target name="content:export">
    <exec dir="${app.dir}" logoutput="true" passthru="true"
      command="${drush.bin} dcem cr_default_content" />
  </target>
  <target name="content:export:show">
    <exec dir="${app.dir}" logoutput="true" passthru="true"
      command="${drush.bin} dcer ${type} ${id}" />
  </target>
  <target name="content:export:save">
    <exec dir="${app.dir}" logoutput="true" passthru="true"
      command="${drush.bin} dcer --file=${app.content.dir} ${type} ${id}" />
    <exec command="rm -fr ${app.content.dir}user" />
  </target>

  <!-- Quality Code template: https://github.com/previousnext/phing-phpqatools/blob/master/build.xml -->
  <target name="info:code" description="Check quality of the custom code"
    depends="info:tools, info:code:cs, info:code:md, info:code:loc">
  </target>
  <target name="info:tools" description="Install tools">
    <exec dir="${app.profile.dir}tests/behat" command="composer install" logoutput="true" />
  </target>
  <target name="info:code:cs"
    description="Check quality of the PHP code for more info. https://www.drupal.org/node/1419988">
    <exec command="${cs.bin} --config-set installed_paths ${c.home}${cs.dir}" />
    <exec logoutput="true" dir="${app.profile.dir}"
      command="${cs.bin} ${cs.standard} ${cs.ext} modules/custom themes/custom" />
  </target>
  <target name="info:code:md"
    description="Detect the mess in the code. https://phpmd.org/documentation/index.html">
    <exec logoutput="true" dir="${app.profile.dir}"
      command="${md.bin} modules/custom text codesize,unusedcode,naming" />
  </target>
  <target name="info:code:cpd"
    description="Find duplicate code">
    <exec logoutput="true" dir="${app.profile.dir}"
      command="${cpd.bin} modules/custom" />
  </target>
  <target name="info:code:loc"
    description="Show stadistics of your lines of code">
    <exec logoutput="true" dir="${app.profile.dir}"
      command="${loc.bin} modules/custom" />
  </target>
</project>
