<project name="cr" default="build:dev">
  <!-- example: https://github.com/previousnext/agov/blob/8.x-1.x/build.xml -->
  <!-- Properties -->
  <property name="app.dir"            value="${project.basedir}/"/>
  <property name="app.name"           value="CR Campaign"/>
  <property name="app.profile.name"   value="cr"/>
  <property name="app.profile.dir"    value="profiles/${app.profile.name}/"/>
  <property name="app.profile.theme"  value="${app.profile.dir}themes/custom/campaign_base"/>
  <property name="app.content.dir"    value="${app.profile.dir}modules/custom/cr_default_content/content/"/>
  <!-- Development modules. -->
  <property name="app.code"           value="${app.profile.dir}modules/custom"/>
  <property name="app.config_modules" value="cr cr_article cr_content_wall cr_teaser cr_landing_page cr_default_content cr_search"/>
  <property name="app.dev_modules"    value="devel kint"/>
  <!-- This should get overidden for secure builds. -->
  <property name="app.password"       override="true" value="admin"/>
  <property name="app.uri"            override="true" value="http://campaign.dev"/>
  <property name="drush.bin"          override="true" value="${app.dir}bin/drush"/>
  <property name="c.home"             override="true" value="${app.profile.dir}tests/behat/vendor/"/>
  <property name="cs.dir"             override="true" value="drupal/coder/coder_sniffer"/>
  <property name="cs.standard"        override="true" value="--standard=DrupalPractice"/>
  <property name="cs.ext"             override="true" value="--extensions=php,module,inc,install,test,profile,theme"/>
  <property name="db.querystring"     override="true" value="mysql://root:@localhost/campaign"/>
  <!-- These allow developers to override config. on a per environment basis -->
  <property file="build.properties"   override="true"/>
  <!-- Default & meta -->
  <target name="build" depends="file:clear, install, grunt:build"
    description="Build (or rebuild) the project.">
  </target>
  <target name="build:dev" depends="file:settings, build, user:create, module:dev"
    description="Build (or rebuild) the project for devs.">
  </target>

  <!-- Tests -->
  <target name="test" depends="prepare-test" description="Run behat tests">
    <exec dir="${app.profile.dir}tests/behat" passthru="true" checkreturn="true" command="vendor/bin/behat"/>
  </target>
  <target name="prepare-test" description="Prepare to tun behat tests">
    <copy file="${app.profile.dir}tests/behat/behat.yml.phing" tofile="${app.profile.dir}tests/behat/behat.yml" overwrite="true">
      <filterchain>
        <replacetokens begintoken="%%" endtoken="%%">
          <token key="DRUPAL_TI_DRUPAL_DIR" value="${app.dir}"/>
          <token key="BASE_URL" value="${app.uri}"/>
        </replacetokens>
      </filterchain>
    </copy>
  </target>

  <!-- Front-end -->
  <target name="grunt:build" description="Generate all compiled Sass and JS files.">
    <exec dir="${app.profile.theme}" logoutput="true" passthru="true" checkreturn="true" command="grunt build"/>
  </target>

  <!-- File system -->
  <target name="file:clear">
    <exec dir="sites/default/files" command="rm -rf config_* 2016* *im*"/>
    <delete quiet="true" dir="sites/default/files/private"/>
    <delete quiet="true" dir="sites/default/files/news"/>
    <delete quiet="true" dir="sites/default/files/php"/>
    <delete quiet="true" dir="sites/default/files/styles"/>
  </target>
  <target name="file:mod">
    <chmod file="sites/default" mode="0755" failonerror="true"/>
    <chmod file="sites/default/settings.php" mode="0755" failonerror="true"/>
    <exec command="chmod 777 -R sites/default/files/"/>
  </target>
  <target name="file:settings">
    <if>
      <not><available file="sites/default/settings.local.php" type="file"/></not>
      <then>
        <copy file="sites/default/settings.example.local.php" tofile="sites/default/settings.local.php" overwrite="true"/>
      </then>
    </if>
  </target>

  <!-- Drush core -->
  <target name="make-core" description="Compile CR from a make file" depends="make">
    <exec checkreturn="true" logoutput="true" passthru="true"
      command="${drush.bin} make -y ${app.profile.dir}drupal-org-core.make.yml --no-cache --prepare-install"/>
  </target>
  <target name="make" description="Compile CR contrib from a make file">
    <exec checkreturn="true" logoutput="true" passthru="true"
      command="${drush.bin} make -y ${app.profile.dir}drupal-org.make.yml --no-core --contrib-destination=${app.profile.dir}"/>
  </target>
  <target name="install" description="Install CR with standard configuration.">
    <exec dir="${app.dir}" logoutput="true" passthru="true"
      command="${drush.bin} si ${app.profile.name} -y --site-name=${app.name} --account-pass='${app.password}' --db-url=${db.querystring}"/>
    <phingcall target="file:mod"/>
  </target>
  <target name="cache:clear">
    <exec command="${drush.bin} cr" passthru="true"/>
    <phingcall target="file:mod"/>
  </target>
  <target name="login" description="Generate a one-time login link">
    <exec passthru="true" logoutput="true" command="${drush.bin} uli -l ${app.uri}"/>
  </target>
  <target name="user:create" description="Create a test users">
    <exec logoutput="true" command="${drush.bin} ucrt auth --password=auth --mail=auth@cr.co"/>
    <exec logoutput="true" command="${drush.bin} ucrt editor --password=editor --mail=editor@cr.co"/>
    <exec logoutput="true" command="${drush.bin} urol editor --name=editor"/>
  </target>
  <target name="module:dev" description="Install the development modules.">
   <exec logoutput="true" passthru="true" command="${drush.bin} en -y ${app.dev_modules}"/>
 </target>

  <!-- Drush contrib -->
  <target name="config:export" description="Export all of the configuration for the defined modules.">
    <foreach list="${app.config_modules}" param="config_devel_module" target="config:export:single" delimiter=" "/>
  </target>
  <target name="config:export:single">
    <exec passthru="true" logoutput="true" command="${drush.bin} config-devel-export ${config_devel_module}"/>
  </target>
  <target name="content:export">
    <exec logoutput="true" passthru="true" command="${drush.bin} dcem cr_default_content"/>
  </target>
  <target name="content:export:show">
    <exec logoutput="true" passthru="true" command="${drush.bin} dcer ${type} ${id}"/>
  </target>
  <target name="content:export:save">
    <exec logoutput="true" passthru="true" command="${drush.bin} dcer --folder=${app.content.dir} ${type} ${id}"/>
    <delete quiet="true" dir="${app.content.dir}user"/>
  </target>

  <!-- Quality Code template: https://github.com/previousnext/phing-phpqatools/blob/master/build.xml -->
  <target name="info:code" description="Check quality of the custom code"
    depends="info:tools, info:code:cs, info:code:md, info:code:loc">
  </target>
  <target name="info:tools" description="Install tools">
    <exec dir="${app.profile.dir}tests/behat" command="composer install" logoutput="true"/>
  </target>
  <target name="info:code:cs" description="Check quality of the PHP code for more info. https://www.drupal.org/node/1419988">
    <exec command="${c.home}bin/phpcs --config-set installed_paths ${c.home}${cs.dir}"/>
    <exec logoutput="true" command="${c.home}bin/phpcs ${cs.standard} ${cs.ext} ${app.code}"/>
  </target>
  <target name="info:code:md" description="Detect the mess in the code. https://phpmd.org/documentation/index.html">
    <exec logoutput="true" command="${c.home}bin/phpmd ${app.code} text codesize,unusedcode,naming"/>
  </target>
  <target name="info:code:cpd" description="Find duplicate code">
    <exec logoutput="true" command="${c.home}bin/phpcpd ${app.code}"/>
  </target>
  <target name="info:code:loc" description="Show stadistics of your lines of code">
    <exec logoutput="true" command="${c.home}bin/phploc ${app.code}"/>
  </target>
</project>
