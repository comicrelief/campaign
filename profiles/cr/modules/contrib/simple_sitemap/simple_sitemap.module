<?php
/**
 * @file
 * Main module file containing hooks.
 */

use Drupal\simple_sitemap\Simplesitemap;
use Drupal\simple_sitemap\SitemapGenerator;

/**
 * Implements hook_form_alter.
 *
 * Adds sitemap settings to entity types that are supported via plugins.
 */
function simple_sitemap_form_alter(&$form, $form_state, $form_id) {
  $sitemap_form_entity_data = Simplesitemap::get_sitemap_form_entity_data($form_state, $form_id);
  if (empty($sitemap_form_entity_data))
    return;
  $entity_type_id = $sitemap_form_entity_data['entity_type_id'];
  $bundle_name = $sitemap_form_entity_data['bundle_name'];

  $sitemap = new Simplesitemap;

  // Get current entity type sitemap settings.
  $entity_types = $sitemap->get_config('entity_types');

  $form['simple_sitemap'] = array(
    '#type' => 'details',
    '#group' => 'additional_settings',
    '#title' => t('Simple XML sitemap'),
  );

  // Attach some js magic to forms.
  // Only attach fieldset summary js to 'additional settings' vertical tabs.
  $form['simple_sitemap']['#attached']['library'][] = 'simple_sitemap/form';
  if (isset($form['additional_settings'])) {
    $form['simple_sitemap']['#attached']['library'][] = 'simple_sitemap/fieldsetSummaries';
  }

  $index_content_checked = isset($entity_types[$entity_type_id][$bundle_name]['index']) ? $entity_types[$entity_type_id][$bundle_name]['index'] : FALSE;
  $form['simple_sitemap']['simple_sitemap_index_content'] = array(
    '#type' => 'checkbox',
    '#title' => t('Index content of this type'),
    '#default_value' => $index_content_checked,
  );

  $priority = isset($entity_types[$entity_type_id][$bundle_name]['priority']) ? $entity_types[$entity_type_id][$bundle_name]['priority'] : SitemapGenerator::PRIORITY_DEFAULT;
  $form['simple_sitemap']['simple_sitemap_priority'] = array(
    '#type' => 'select',
    '#title' => t('Priority'),
    '#description' => t('The priority entities of this bundle will have in the eyes of search engine bots.'),
    '#options' => SitemapGenerator::get_priority_select_values(),
    '#default_value' => $priority,
  );

  $form['simple_sitemap']['simple_sitemap_regenerate_now'] = array(
    '#type' => 'checkbox',
    '#title' => t('Regenerate sitemap after hitting Save'),
    '#description' => t('This setting will regenerate the whole sitemap including the above changes.<br/>Otherwise the sitemap will be rebuilt on next cron run.'),
    '#default_value' => FALSE,
  );

  $form['#simple_sitemap']['entity_type_id'] = $entity_type_id;
  $form['#simple_sitemap']['bundle_name'] = $bundle_name;

  // Add submission handler.
  if (isset($form['actions']['submit']['#submit'])) {
    $form['actions']['submit']['#submit'][] = 'simple_sitemap_entity_form_submit';
  }
  else { // Fix for account page rendering other submit handlers not usable.
    $form['#submit'][] = 'simple_sitemap_entity_form_submit';
  }
}

/**
 * Form submission handler called in hook_form_alter.
 */
function simple_sitemap_entity_form_submit($form, &$form_state) {

  $sitemap = new Simplesitemap;
  $values = $form_state->getValues();

  // Only make changes in DB if sitemap settings actually changed.
  if ($values['simple_sitemap_index_content'] != $form['simple_sitemap']['simple_sitemap_index_content']['#default_value']
    || $values['simple_sitemap_priority'] != $form['simple_sitemap']['simple_sitemap_priority']['#default_value']) {

    $entity_type_id = $form['#simple_sitemap']['entity_type_id'];
    $bundle_name = $form['#simple_sitemap']['bundle_name'];

    // Get current entity type sitemap settings.
    $entity_types = $sitemap->get_config('entity_types');

    $entity_types[$entity_type_id][$bundle_name]['index'] = $values['simple_sitemap_index_content'];
    $entity_types[$entity_type_id][$bundle_name]['priority'] = $values['simple_sitemap_priority'];

    // Save new entity type settings.
    $sitemap->save_config('entity_types', $entity_types);
  }

  // Regenerate sitemaps according to user setting.
  if ($values['simple_sitemap_regenerate_now']) {
    $sitemap->generate_sitemap();
  }
}

/**
 * Implements hook_cron.
 */
function simple_sitemap_cron() {
  $sitemap = new Simplesitemap;
  if ($sitemap->get_setting('cron_generate')) {
    // Regenerate sitemap for all languages.
    $sitemap->generate_sitemap('cron');
  }
}

/**
 * Implements hook_entity_bundle_delete().
 *
 * Removes settings of the removed bundle.
 */
function simple_sitemap_entity_bundle_delete($entity_type_id, $bundle) {
  $sitemap = new Simplesitemap;
  $entity_types = $sitemap->get_config('entity_types');
  $bundle_entity_type_id = \Drupal::entityManager()->getDefinition($entity_type_id)->getBundleEntityType();

  if (isset($entity_types[$bundle_entity_type_id][$bundle])) {
    unset($entity_types[$bundle_entity_type_id][$bundle]);
    $sitemap->save_config('entity_types', $entity_types);
    drupal_set_message(t("You may want to <a href='@url'>regenerate</a> your XML sitemap now.
    Otherwise it will be rebuilt on the next cron run.", //todo: First check if cron generation is enabled.
      array('@url' => $GLOBALS['base_url'] . '/admin/config/search/simplesitemap')));
  }
}
