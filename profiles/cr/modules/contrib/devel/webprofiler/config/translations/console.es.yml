commands:
  webprofiler:
    export:
      description: Exportar Webprofiler perfil(es) a un archivo.
      arguments:
        id: Profile id.
      options:
        directory: Directorio de destiono para almacenar archivo(s) exportados.
      messages:
        success: Satisfactoriamente exportado en %s
        exported_count: <info>Exportados %s perfiles</info>
        error_writing: Error escribiendo el archivo %s
        error_no_profile: No fue encontrado un perfil con id %s
      progress:
          exporting: Exportando perfiles...
          archive: Creando archivos...
          delete_tmp: Borrando archivos temporales...
          done: Terminado.
    list:
      description: Listar perfiles Webprofiler.
      options:
        ip: Filtrar por IP.
        url: Filtrar por URL.
        method: Filtrar por método HTTP.
        limit: Limitar perfiles a mostrar.
      rows:
        time: D, d/m/Y - H:i:s
      header:
       token: Token
       ip: IP
       method: Método
       url: URL
       time: Fecha
    benchmark:
      description: Benchmark una URL.
      arguments:
       url: Url para efectuar un benchmark.
      options:
        runs: Número de ejecuciones.
        file: Guardar los resultados en un archivo.
        cache-rebuild: Reconstruir cache antes de iniciar el benchmark.
      messages:
        not_git: No en un repositorio git.
        error_login: Error ingresando al sistema.
      progress:
        cache_rebuild: Reconstruyendo cache...
        login: Ingresando al sistema...
        get: Solicitud Http...
        compute_avg: Calculando promedio...
        compute_median: Calculando media...
        compute_95percentile: Calculando percentile 95...
        git_hash: Calculando GIT hash...
        yaml: Generando salida...
        done: Terminado.
