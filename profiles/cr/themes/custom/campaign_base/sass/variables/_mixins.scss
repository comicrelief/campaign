// Mixins


/** Button mixin, used by $buttonList in _buttons.scss
 * 
 * Parameters:
 * $button[1] = name
 * $button[2] = background-color
 * $button[3] = background-color for hover & focus
 * $button[4] = text color
 */

@mixin btn-variation($button){
  // Makes .btn-green etc
  .btn--#{nth($button, 1)} {
    // Applies $colour-green etc.
    background-color: nth($button, 2);
    color: nth($button, 4);
    @include transition-property(background-color);
    @include transition-duration(300ms);
    &:hover,
    &:focus {
      outline: none;
      // Applies $green-v-dark etc.
      background-color: nth($button, 3);
      color: nth($button, 4);
      @include transition-property(background-color);
      @include transition-duration(600ms);
    }
    &:active {
      @include transition-property(background-color);
      @include transition-duration(600ms);
    }
  }
}

/***********************************
 *  Link colour
 */

/**
 * Parameters
 * $link[1] = name
 * $link[2] = border-color and text
 * $link[3] = border-color text for hover & focus
 */
@mixin inlinelink-variation($link) {
  .link--inline-#{nth($link, 1)} {
    border-bottom: 2px solid nth($link, 2);
    color: inherit;
    font-weight: 600;
    text-decoration: none;
    @include transition-property(border, color);
    @include transition-duration(180ms);
    &:hover {    
      border-bottom: 2px solid $black;
    }
  }
}

@mixin link-variation($link) {
  .link--#{nth($link, 1)} {
    border-bottom: 2px solid nth($link, 2);
  }
}

/* Helper function for the aspect ratio mixin */
@function multimap-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

/* Aspect ratio mixin for single message row images; masking and 'cropping' images with CSS alone */
@mixin imageratio($width, $ratio) {
  // Values associated with each 'ratio' keym passed in along with the container width
  // Assumes all images are 16:
  $ratio-map: (
    '16:9' : (height : $width * 0.5625, offset : -50%, width : 178%),
    '4:3' : (height : $width * 0.5625, offset: -50%, width : 178%),
    '1:1' : (height : $width, offset : -16%, width : 134% )
  );

  padding-bottom: multimap-get($ratio-map, $ratio, "height");
  height: 0;
  overflow:hidden;

  picture img {
    margin-left: multimap-get( $ratio-map, $ratio, "offset");
    width: multimap-get( $ratio-map, $ratio, "width");
    height: auto;
  } 
}

